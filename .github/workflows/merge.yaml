name: merge

on:
  push:
    branches:
      - main
      - alpha
      - beta
      - master

env:
  BASE_DIR: "app"
  NODE_VERSION: "14"
  JAVA_VERSION: "11"
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  test:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: ${{ env.JAVA_VERSION }}
    - name: dependency-test
      run: |
        mvn dependency:go-offline
      working-directory: ${{ env.BASE_DIR }}/elementconnect
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2  
    - name: unit-test
      run: |
        mvn clean test -U
      working-directory: ${{ env.BASE_DIR }}/elementconnect
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2 


  release:
    runs-on: ubuntu-latest
    needs: "test"
    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: ${{ env.JAVA_VERSION }}
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-        
    - uses: azure/docker-login@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}  
    - uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: Install dependencies
      run: |
          npm install -g bower
          npm install -g grunt-cli
      working-directory: ${{ env.BASE_DIR }}/elementconnect
    - name: Build job
      run: |
        mvn -s ./settings.xml clean grunt:create-resources grunt:npm grunt:bower grunt:grunt -P elements-local
      working-directory: ${{ env.BASE_DIR }}/elementconnect
    - name: Rename the webapp folder to elementconnect
      run: |
        mv ${{ env.BASE_DIR }}/elementconnect/target-grunt/webapp elementconnect
        ls -lrth
        yes | cp -r ${{ env.BASE_DIR }}/elementconnect/target-grunt/elementconnect ${{ env.BASE_DIR }}/elementconnect/deploy/nginx/
    - name: upload build folder
      uses: actions/upload-artifact@v2
      with:
        name: elementconnect
        path: ${{ env.BASE_DIR }}/elementconnect/target-grunt/elementconnect
    - uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Zip assets
      run: |
        zip -r elementconnect.zip ${{ env.BASE_DIR }}/elementconnect/target-grunt/elementconnect
    - name: Install dependencies
      run: npm cache clean --force && npm install
    - name: release all the things
      run: |
        npx multi-semantic-release --execasync
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: "ap-south-1"
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
